@model EntityLayer.Concrete.Blog

@{
    ViewData["Title"] = "EditBlog";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Blog Güncelle</h1>

<br>

@using (Html.BeginForm("EditBlog", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control", @style = "width:600px" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @style = "color:red" })
    <br>
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control", @style = "width:600px" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @style = "color:red" })
    <br>
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control", @style = "width:600px" })
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage, "", new { @style = "color:red" })
    <br>
    @Html.Label("Kategori")
    @Html.DropDownListFor(x => x.CategoryId, (List<SelectListItem>)ViewBag.cat, new { @class = "form-control", @style = "width:600px" })
    <br>
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogContent, new { @class = "form-control", @style = "width:600px; height:400px" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @style = "color:red" })
    <br>
    <button class="btn btn-info">Bloğu Güncelle</button>
}